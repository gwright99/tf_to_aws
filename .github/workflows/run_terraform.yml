# Reference: https://zoph.me/posts/2020-03-08-github-actions/

name: Run Terraform against AWS account

on:
  push:
    branches:
      - staging

env:
  #AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  tf_version: 'latest'
  tf_working_dir: './graham/tf-test'


jobs:
  get_aws_credentials:
    name: Get AWS Credentials
    runs-on: ubuntu-latest

     # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@master   #v2

    - name: AWS IAM Assume Role
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::128997144437:role/Development
        role-duration-seconds: 900
        aws-region: us-east-1

    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: false
        # args: '-backend-config="bucket=${{ secrets.TF_STATE_S3_BUCKET }}" -backend-config="key=mamip/terraform.tfstate"'

    - name: 'Terraform Plan'
      id: plan
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: false
        # args: '-var="env=dev" -var="artifacts_bucket=${{ env.artifacts_bucket }}"'

    - name: 'Terraform Apply'
      if: steps.plan.outputs.tf_actions_plan_has_changes == 'true'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: false
        # args: '-var="env=dev"'

